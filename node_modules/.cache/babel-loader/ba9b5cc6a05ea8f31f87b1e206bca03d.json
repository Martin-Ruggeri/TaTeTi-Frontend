{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/game/waitJoining.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { getGame } from './gameApi';\n\nfunction WaitJoining() {\n  let timerID; // HOOKS\n\n  const {\n    idGame\n  } = useParams();\n  const [game, setGame] = useState({});\n\n  async function isJoined() {\n    const game = await getGame(idGame);\n    setGame(game);\n    if (game.user2) clearInterval(timerID); // Si estan ambos jugadores, se deja de llamar\n  }\n\n  useEffect(() => {\n    timerID = setInterval(() => isJoined(), 3000);\n    return () => {\n      clearInterval(timerID);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \" Pasale a tu amigo el codigo: \", idGame), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \" Esperando ...\"));\n}\n\nexport { WaitJoining };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/game/waitJoining.tsx"],"names":["React","useState","useEffect","useParams","getGame","WaitJoining","timerID","idGame","game","setGame","isJoined","user2","clearInterval","setInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAAiBC,OAAjB,QAAgC,WAAhC;;AAGA,SAASC,WAAT,GAAuB;AACnB,MAAIC,OAAJ,CADmB,CAEnB;;AACA,QAAM;AAACC,IAAAA;AAAD,MAAWJ,SAAS,EAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAGA,iBAAeS,QAAf,GAAyB;AACrB,UAAMF,IAAI,GAAG,MAAMJ,OAAO,CAACG,MAAD,CAA1B;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,QAAGA,IAAI,CAACG,KAAR,EAAcC,aAAa,CAACN,OAAD,CAAb,CAJO,CAImB;AAC3C;;AAGDJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,GAAGO,WAAW,CACjB,MAAMH,QAAQ,EADG,EAEjB,IAFiB,CAArB;AAKA,WAAO,MAAM;AACTE,MAAAA,aAAa,CAACN,OAAD,CAAb;AACH,KAFD;AAGH,GATQ,EASP,EATO,CAAT;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAmCC,MAAnC,CAFI,eAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJI,CADJ;AASH;;AAGD,SAASF,WAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { IGame , getGame } from './gameApi';\n\n\nfunction WaitJoining() {\n    let timerID:any;\n    // HOOKS\n    const {idGame} = useParams();\n    const [game, setGame] = useState({} as IGame);\n\n\n    async function isJoined(){\n        const game = await getGame(idGame);\n        setGame(game);\n\n        if(game.user2)clearInterval(timerID);   // Si estan ambos jugadores, se deja de llamar\n    }\n\n\n    useEffect(() => {\n        timerID = setInterval(\n            () => isJoined(),\n            3000\n        );\n        \n        return(() => {\n            clearInterval(timerID);\n        })\n    },[]);\n\n\n\n    return (\n        <div>\n\n    <h2> Pasale a tu amigo el codigo: {idGame}</h2>    \n\n    <h3> Esperando ...</h3>\n\n        </div>\n    );\n}\n\n\nexport { WaitJoining };"]},"metadata":{},"sourceType":"module"}