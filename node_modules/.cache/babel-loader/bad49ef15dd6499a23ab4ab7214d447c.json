{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/game/game.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { newGame, joinGame } from './gameApi';\nimport { newBoard } from './board/boardApi';\n\nfunction CreateGame() {\n  // Opciones que se pueden seleccionar\n  const options = ['Jugar contra la maquina', 'Jugar contra un amigo']; // HOOKS\n\n  const [radio, setRadio] = useState(options[1]);\n  const history = useHistory(); // Al accionar boton Crear partida\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    try {\n      switch (radio) {\n        case options[0]:\n          {\n            const game = await newGame({\n              vsMaquina: true\n            });\n            await newBoard(game.id, {}); // Crea el board inicial\n\n            history.push(`/game/board`, {\n              gameInit: game\n            }); // Cambiar al component Board\n\n            break;\n          }\n\n        case options[1]:\n          {\n            const game = await newGame({\n              vsMaquina: false\n            });\n            history.push(`/game/waiting`, {\n              gameInit: game\n            }); // Cambiar al component WaitJoined\n\n            break;\n          }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\",\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Crear Juego\"), options.map(option => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio\",\n    key: option.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w3-margin-right\",\n    type: \"radio\",\n    value: option,\n    checked: radio === option,\n    onChange: event => {\n      setRadio(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, option)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w3-button w3-block w3-section w3-black w3-round-xxlarge \",\n    type: \"submit\",\n    value: \"Crear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction UnirGame() {\n  // HOOKS\n  const [codigo, setValueInput] = useState(Number);\n  const [validation, setValidation] = useState('');\n  const history = useHistory(); // Al accionar boton Crear partida\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    setValidation('');\n\n    if (!codigo) {\n      setValidation(`El Codigo no puede estar vacio`);\n      return;\n    } // Si el input esta vacio retorna nada\n\n\n    try {\n      const game = await joinGame(codigo, {}); // Une el user2 a la partida.\n\n      await newBoard(game.id, {}); // Crea el board inicial\n\n      history.push(`/game/board/`, {\n        gameInit: game\n      }); // Cambiar al component Board\n    } catch (error) {\n      setValidation(`Codigo '${codigo}' invalido`);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\",\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Unirte Juego\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-row w3-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"w3-text-blue\",\n    htmlFor: \"unirPartida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 71\n    }\n  }, \"Codigo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-rest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w3-input\",\n    type: \"number\",\n    id: \"unirPartida\",\n    placeholder: \"Ingrese C\\xF3digo Partida\",\n    onChange: event => setValueInput(parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-pale-red w3-border w3-text-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, validation)), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w3-button w3-block w3-section w3-black w3-round-xxlarge \",\n    type: \"submit\",\n    value: \"Unir\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport { CreateGame, UnirGame };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/game/game.tsx"],"names":["React","useState","useHistory","newGame","joinGame","newBoard","CreateGame","options","radio","setRadio","history","handleSubmit","event","preventDefault","game","vsMaquina","id","push","gameInit","error","console","log","map","option","toString","target","value","UnirGame","codigo","setValueInput","Number","validation","setValidation","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { newGame, joinGame, IGame } from './gameApi';\nimport { newBoard } from './board/boardApi';\n\nfunction CreateGame() {\n    // Opciones que se pueden seleccionar\n    const options = ['Jugar contra la maquina', 'Jugar contra un amigo'];\n\n    // HOOKS\n    const [radio, setRadio] = useState(options[1]);\n    const history = useHistory();\n\n    // Al accionar boton Crear partida\n    async function handleSubmit(event: React.FormEvent) {\n        event.preventDefault();   // consume el evento\n\n        try {\n            switch (radio) {\n                case options[0]: {\n                    const game: IGame = await newGame({ vsMaquina: true });\n                    await newBoard(game.id, {});     // Crea el board inicial\n                    history.push(`/game/board`, { gameInit: game });          // Cambiar al component Board\n                    break;\n                }\n\n                case options[1]: {\n                    const game: IGame = await newGame({ vsMaquina: false });\n                    history.push(`/game/waiting`, { gameInit: game });          // Cambiar al component WaitJoined\n                    break;\n                }\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    return (\n        <form className=\"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\" onSubmit={(event) => handleSubmit(event)}>\n            <h2 className=\"w3-center\">Crear Juego</h2>\n\n            {\n                options.map(option =>\n                    <div className=\"radio\" key={option.toString()}>\n                        <label>\n                            <input className=\"w3-margin-right\" type=\"radio\" value={option} checked={radio === option} onChange={(event) => { setRadio(event.target.value) }} />\n                            <b>{option}</b>\n                        </label>\n\n                        <br />\n                    </div>\n                )\n            }\n\n            <input className=\"w3-button w3-block w3-section w3-black w3-round-xxlarge \" type=\"submit\" value=\"Crear\" />\n\n        </form>\n    );\n}\n\n\nfunction UnirGame() {\n\n    // HOOKS\n    const [codigo, setValueInput] = useState(Number);\n    const [validation, setValidation] = useState('');\n    const history = useHistory();\n\n    // Al accionar boton Crear partida\n    async function handleSubmit(event: React.FormEvent) {\n        event.preventDefault();   // consume el evento\n        setValidation('');\n\n        if (!codigo) {\n            setValidation(`El Codigo no puede estar vacio`);\n            return;\n        }  // Si el input esta vacio retorna nada\n\n        try {\n            const game: IGame = await joinGame(codigo, {});         // Une el user2 a la partida.\n\n            await newBoard(game.id, {});     // Crea el board inicial\n\n            history.push(`/game/board/`, { gameInit: game });          // Cambiar al component Board\n        } catch (error) {\n            setValidation(`Codigo '${codigo}' invalido`);\n        }\n    }\n\n\n    return (\n        <form className=\"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\" onSubmit={(event) => handleSubmit(event)}>\n            <h2 className=\"w3-center\">Unirte Juego</h2>\n\n\n            {/* Input */}\n            <div className=\"w3-row w3-section\">\n                <label className=\"w3-text-blue\" htmlFor=\"unirPartida\"><b>Codigo</b></label>\n                <div className=\"w3-rest\">\n                    <input className=\"w3-input\" type=\"number\" id=\"unirPartida\" placeholder=\"Ingrese Código Partida\" onChange={(event) => setValueInput(parseInt(event.target.value))} />\n                </div>\n            </div>\n\n            {/* Validaciones */}\n            <div className=\"w3-pale-red w3-border w3-text-red\">\n                <label>{validation}</label>\n            </div>\n\n            <input className=\"w3-button w3-block w3-section w3-black w3-round-xxlarge \" type=\"submit\" value=\"Unir\" />\n\n        </form>\n    );\n}\n\n\nexport { CreateGame, UnirGame };"]},"metadata":{},"sourceType":"module"}