{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/game/unirGame.tsx\";\nimport React, { useState } from 'react';\nimport { joinGame } from './gameApi';\nconst gameInit = {\n  idGame: 0,\n  user1: '',\n  user2: '',\n  winUser1: 0,\n  winUser2: 0,\n  vsMaquina: false\n};\n\nfunction UnirGame() {\n  // HOOKS\n  const [codigo, setValueInput] = useState(Number);\n  const [game, setGame] = useState(gameInit); // Al accionar boton Crear partida\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    if (!codigo) return; // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"El Codigo no puede estar vacio\"\n\n    try {\n      await joinGame(codigo, {}); // Une el user2 a la partida.\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unirPartida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"C\\xF3digo Partida\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"unirPartida\",\n    placeholder: \"Ingrese C\\xF3digo Partida\",\n    onChange: event => setValueInput(parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Unir Partida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport { UnirGame };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/game/unirGame.tsx"],"names":["React","useState","joinGame","gameInit","idGame","user1","user2","winUser1","winUser2","vsMaquina","UnirGame","codigo","setValueInput","Number","game","setGame","handleSubmit","event","preventDefault","error","console","log","parseInt","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAgC,WAAhC;AAEA,MAAMC,QAAe,GAAG;AAACC,EAAAA,MAAM,EAAE,CAAT;AAAYC,EAAAA,KAAK,EAAE,EAAnB;AAAuBC,EAAAA,KAAK,EAAE,EAA9B;AAAkCC,EAAAA,QAAQ,EAAE,CAA5C;AAA+CC,EAAAA,QAAQ,EAAE,CAAzD;AAA4DC,EAAAA,SAAS,EAAE;AAAvE,CAAxB;;AAEA,SAASC,QAAT,GAAoB;AAEhB;AACA,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BX,QAAQ,CAACY,MAAD,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACE,QAAD,CAAhC,CAJgB,CAOhB;;AACA,iBAAea,YAAf,CAA4BC,KAA5B,EAAoD;AAChDA,IAAAA,KAAK,CAACC,cAAN,GADgD,CACtB;;AAE1B,QAAG,CAACP,MAAJ,EAAY,OAHoC,CAG3B;;AAErB,QAAI;AACA,YAAMT,QAAQ,CAACS,MAAD,EAAS,EAAT,CAAd,CADA,CACoC;AAGvC,KAJD,CAIE,OAAOQ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAGD,sBACI;AAAM,IAAA,QAAQ,EAAGF,KAAD,IAAWD,YAAY,CAACC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAGI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,aAAxB;AAAsC,IAAA,WAAW,EAAC,2BAAlD;AAA2E,IAAA,QAAQ,EAAGA,KAAD,IAAWL,aAAa,CAACU,QAAQ,CAACL,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAT,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAYH;;AAED,SAASd,QAAT","sourcesContent":["import React, { useState } from 'react';\nimport { joinGame , IGame} from './gameApi';\n\nconst gameInit: IGame = {idGame: 0, user1: '', user2: '', winUser1: 0, winUser2: 0, vsMaquina: false};\n\nfunction UnirGame() {\n\n    // HOOKS\n    const [codigo, setValueInput] = useState(Number);\n    const [game, setGame] = useState(gameInit);\n\n\n    // Al accionar boton Crear partida\n    async function handleSubmit(event: React.FormEvent) {\n        event.preventDefault();   // consume el evento\n\n        if(!codigo) return;  // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"El Codigo no puede estar vacio\"\n\n        try {\n            await joinGame(codigo, {});         // Une el user2 a la partida.\n\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    return (\n        <form onSubmit={(event) => handleSubmit(event)}>\n            <fieldset>\n\n                <label htmlFor=\"unirPartida\">Código Partida</label>\n                <input type=\"number\" id=\"unirPartida\" placeholder=\"Ingrese Código Partida\" onChange={(event) => setValueInput(parseInt(event.target.value))} />\n\n                <input type=\"submit\" value=\"Unir Partida\" />\n\n            </fieldset>\n        </form>\n    );\n}\n\nexport { UnirGame };"]},"metadata":{},"sourceType":"module"}