{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { setToken, getToken } from '../helpers/auth-helpers';\nimport { postUser } from './userApi';\n\nfunction Login() {\n  const [valueInput, setValueInput] = useState('');\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    if (!valueInput) return; // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n    try {\n      const token = await postUser({\n        name: valueInput\n      });\n      setToken(token); // Setea el token al localStorage\n\n      history.push('/game');\n    } catch (error) {\n      console.log(error); // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n    }\n  }\n\n  useEffect(() => {\n    // Si hay un token guardado en el storage salta a game\n    if (getToken()) {//history.push('/game');\n    }\n  }, [history]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\",\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"w3-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Jugador\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: valueInput,\n    placeholder: \"Ingrese Nombre\",\n    onChange: event => setValueInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"w3-xxlarge fa fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: valueInput,\n    placeholder: \"Ingrese Nombre\",\n    onChange: event => setValueInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-rest user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: valueInput,\n    placeholder: \"Ingrese Nombre\",\n    onChange: event => setValueInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Ingresar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport { Login };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx"],"names":["React","useState","useEffect","useHistory","setToken","getToken","postUser","Login","valueInput","setValueInput","history","handleSubmit","event","preventDefault","token","name","push","error","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { setToken, getToken } from '../helpers/auth-helpers';\n\nimport { postUser } from './userApi';\n\n\n\nfunction Login() {\n  const [valueInput, setValueInput] = useState('');\n  const history = useHistory();\n\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();   // consume el evento\n\n    if (!valueInput) return;  // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n    try {\n      const token: string = await postUser({ name: valueInput });\n\n      setToken(token);    // Setea el token al localStorage\n\n      history.push('/game');\n    } catch (error) {\n      console.log(error);           // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n    }\n  }\n\n\n  useEffect(() => {\n    // Si hay un token guardado en el storage salta a game\n    if (getToken()) {\n      //history.push('/game');\n    }\n  }, [history]);\n\n\n  return (\n    <form className=\"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin w3-col l3\" onSubmit={(event) => handleSubmit(event)}>\n      <h2 className=\"w3-center\">Jugador</h2>\n      \n      <label>\n        Name:\n          <input type=\"text\" value={valueInput} placeholder=\"Ingrese Nombre\" onChange={(event) => setValueInput(event.target.value)} />\n      </label>\n\n      <div className=\"w3-row\">\n        <div className=\"w3-col\">\n          <i className=\"w3-xxlarge fa fa-user\">\n          <input type=\"text\" value={valueInput} placeholder=\"Ingrese Nombre\" onChange={(event) => setValueInput(event.target.value)} />\n          </i>\n        </div>\n        <div className=\"w3-rest user\">\n          <input type=\"text\" value={valueInput} placeholder=\"Ingrese Nombre\" onChange={(event) => setValueInput(event.target.value)} />\n        </div>\n      </div>\n\n\n      <input type=\"submit\" value=\"Ingresar\" />\n    </form>\n  );\n}\n\nexport { Login };"]},"metadata":{},"sourceType":"module"}