{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { setToken, getToken } from '../helpers/auth-helpers';\nimport { postUser } from './userApi';\n\nfunction Login() {\n  const [valueInput, setValueInput] = useState('');\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    if (!valueInput) return; // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n    try {\n      const token = await postUser({\n        name: valueInput\n      });\n      setToken(token); // Setea el token al localStorage\n\n      history.push('/game');\n    } catch (error) {\n      console.log(error); // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n    }\n  }\n\n  useEffect(() => {\n    // Si hay un token guardado en el storage salta a game\n    if (getToken()) {\n      history.push('/game');\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: valueInput,\n    placeholder: \"Ingrese Nombre\",\n    onChange: event => setValueInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Ingresar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { Login };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx"],"names":["React","useState","useEffect","useHistory","setToken","getToken","postUser","Login","valueInput","setValueInput","history","handleSubmit","event","preventDefault","token","name","push","error","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,QAAT,EAAoBC,QAApB,QAAoC,yBAApC;AAEA,SAASC,QAAT,QAAyB,WAAzB;;AAIA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMS,OAAO,GAAGP,UAAU,EAA1B;;AAGA,iBAAeQ,YAAf,CAA4BC,KAA5B,EAAoD;AAClDA,IAAAA,KAAK,CAACC,cAAN,GADkD,CACxB;;AAE1B,QAAG,CAACL,UAAJ,EAAgB,OAHkC,CAGzB;;AAEzB,QAAG;AACD,YAAMM,KAAa,GAAG,MAAMR,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAEP;AAAP,OAAD,CAApC;AAEAJ,MAAAA,QAAQ,CAACU,KAAD,CAAR,CAHC,CAGmB;;AAEpBJ,MAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACD,KAND,CAMC,OAAMC,KAAN,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADW,CACmB;AAC/B;AACF;;AAGDf,EAAAA,SAAS,CAAE,MAAM;AACf;AACA,QAAGG,QAAQ,EAAX,EAAe;AACXK,MAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACD;AACJ,GALQ,EAKL,EALK,CAAT;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAGJ,KAAD,IAAWD,YAAY,CAACC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,UAA1B;AAAsC,IAAA,WAAW,EAAC,gBAAlD;AAAmE,IAAA,QAAQ,EAAGI,KAAD,IAAWH,aAAa,CAACG,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,SAAQd,KAAR","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { setToken , getToken } from '../helpers/auth-helpers';\n\nimport { postUser } from './userApi';\n\n\n\nfunction Login() {\n    const [valueInput, setValueInput] = useState('');\n    const history = useHistory();\n  \n\n    async function handleSubmit(event: React.FormEvent) {\n      event.preventDefault();   // consume el evento\n      \n      if(!valueInput) return;  // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n      try{\n        const token: string = await postUser({name: valueInput});\n\n        setToken(token);    // Setea el token al localStorage\n\n        history.push('/game');\n      }catch(error){\n        console.log(error);           // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n      }\n    }\n  \n\n    useEffect( () => {\n      // Si hay un token guardado en el storage salta a game\n      if(getToken()) {\n          history.push('/game');\n        }\n    } , []);\n  \n\n    return (\n      <form onSubmit={(event) => handleSubmit(event)}>\n        <label>\n          Name:\n          <input type=\"text\" value={valueInput} placeholder=\"Ingrese Nombre\" onChange={(event) => setValueInput(event.target.value)} />\n        </label>\n        <input type=\"submit\" value=\"Ingresar\"/>\n      </form>\n    );\n  }\n\n  export {Login};"]},"metadata":{},"sourceType":"module"}