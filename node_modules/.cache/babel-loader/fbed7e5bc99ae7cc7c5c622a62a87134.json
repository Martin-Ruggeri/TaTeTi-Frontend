{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { setToken, getToken } from '../helpers/auth-helpers';\nimport { postUser, findUserByToken } from './userApi'; // Variables\n\nconst userInit = {\n  id: 0,\n  name: ''\n};\n\nfunction Login() {\n  const [valueInput, setValueInput] = useState('');\n  const [user, setUser] = useState(userInit);\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    if (!valueInput) return; // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n    try {\n      const token = await postUser({\n        name: valueInput\n      });\n      setToken(token); // Setea el token al localStorage\n\n      history.push('/game');\n    } catch (error) {\n      console.log(error); // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n    }\n  }\n\n  useEffect(() => {\n    // Si hay un token guardado en el storage salta a game\n    if (getToken()) {\n      findUserByToken().then(result => {\n        setUser(result);\n        history.push('/game');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: valueInput,\n    placeholder: \"Ingrese Nombre\",\n    onChange: event => setValueInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Ingresar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"id: \", user.id), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"name: \", user.name));\n}\n\nexport { Login };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/user/login.tsx"],"names":["React","useState","useEffect","useHistory","setToken","getToken","postUser","findUserByToken","userInit","id","name","Login","valueInput","setValueInput","user","setUser","history","handleSubmit","event","preventDefault","token","push","error","console","log","then","result","catch","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,QAAT,EAAoBC,QAApB,QAAmD,yBAAnD;AAEA,SAASC,QAAT,EAAmBC,eAAnB,QAAiD,WAAjD,C,CAGA;;AACA,MAAMC,QAAe,GAAG;AAACC,EAAAA,EAAE,EAAC,CAAJ;AAAQC,EAAAA,IAAI,EAAC;AAAb,CAAxB;;AAGA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACO,QAAD,CAAhC;AACA,QAAMQ,OAAO,GAAGb,UAAU,EAA1B;;AAGA,iBAAec,YAAf,CAA4BC,KAA5B,EAAoD;AAClDA,IAAAA,KAAK,CAACC,cAAN,GADkD,CACxB;;AAE1B,QAAG,CAACP,UAAJ,EAAgB,OAHkC,CAGzB;;AAEzB,QAAG;AACD,YAAMQ,KAAa,GAAG,MAAMd,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEE;AAAP,OAAD,CAApC;AAEAR,MAAAA,QAAQ,CAACgB,KAAD,CAAR,CAHC,CAGmB;;AAEpBJ,MAAAA,OAAO,CAACK,IAAR,CAAa,OAAb;AACD,KAND,CAMC,OAAMC,KAAN,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADW,CAEX;AACD;AACF;;AAGDpB,EAAAA,SAAS,CAAE,MAAM;AACf;AACA,QAAGG,QAAQ,EAAX,EAAe;AACbE,MAAAA,eAAe,GACdkB,IADD,CACOC,MAAD,IAAY;AAChBX,QAAAA,OAAO,CAACW,MAAD,CAAP;AACAV,QAAAA,OAAO,CAACK,IAAR,CAAa,OAAb;AACD,OAJD,EAKCM,KALD,CAKQL,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAPD;AAQD;AAEF,GAbQ,EAaL,EAbK,CAAT;AAgBA,sBACE;AAAM,IAAA,QAAQ,EAAGJ,KAAD,IAAWD,YAAY,CAACC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEN,UAA1B;AAAsC,IAAA,WAAW,EAAC,gBAAlD;AAAmE,IAAA,QAAQ,EAAGM,KAAD,IAAWL,aAAa,CAACK,KAAK,CAACU,MAAN,CAAaC,KAAd,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASf,IAAI,CAACL,EAAd,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWK,IAAI,CAACJ,IAAhB,CARF,CADF;AAYD;;AAED,SAAQC,KAAR","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { setToken , getToken , deleteToken  } from '../helpers/auth-helpers';\n\nimport { postUser, findUserByToken , IUser} from './userApi';\n\n\n// Variables\nconst userInit: IUser = {id:0 , name:''};\n\n\nfunction Login() {\n    const [valueInput, setValueInput] = useState('');\n    const [user, setUser] = useState(userInit);\n    const history = useHistory();\n  \n\n    async function handleSubmit(event: React.FormEvent) {\n      event.preventDefault();   // consume el evento\n      \n      if(!valueInput) return;  // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"EL NOMBRE NO PUEDE ESTAR VACIO\"\n\n      try{\n        const token: string = await postUser({name: valueInput});\n\n        setToken(token);    // Setea el token al localStorage\n\n        history.push('/game');\n      }catch(error){\n        console.log(error);\n        // DEBERIA VALIDAR QUE AL EXISTIR USUARIO MUESTRE UN MENSAJE \"EL NOMBRE YA EXISTE\"\n      }\n    }\n  \n\n    useEffect( () => {\n      // Si hay un token guardado en el storage salta a game\n      if(getToken()) {\n        findUserByToken()\n        .then((result) => {\n          setUser(result);\n          history.push('/game');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      }\n\n    } , []);\n  \n\n    return (\n      <form onSubmit={(event) => handleSubmit(event)}>\n        <label>\n          Name:\n          <input type=\"text\" value={valueInput} placeholder=\"Ingrese Nombre\" onChange={(event) => setValueInput(event.target.value)} />\n        </label>\n        <input type=\"submit\" value=\"Ingresar\"/>\n\n        <h1>id: {user.id}</h1>\n        <h1>name: {user.name}</h1>\n      </form>\n    );\n  }\n\n  export {Login};"]},"metadata":{},"sourceType":"module"}