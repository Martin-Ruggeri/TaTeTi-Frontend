{"ast":null,"code":"var _jsxFileName = \"/home/martin/Programas/React/tateti_v1.1/src/game/unirGame.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { joinGame } from './gameApi';\n\nfunction UnirGame() {\n  // HOOKS\n  const [codigo, setValueInput] = useState(Number);\n  const history = useHistory(); // Al accionar boton Crear partida\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // consume el evento\n\n    if (!codigo) return; // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"El Codigo no puede estar vacio\"\n\n    try {\n      const game = await joinGame(codigo, {}); // Une el user2 a la partida.\n\n      history.push('game/' + game.id); // Cambiar a pages game/:id/board\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unirPartida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"C\\xF3digo Partida\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"unirPartida\",\n    placeholder: \"Ingrese C\\xF3digo Partida\",\n    onChange: event => setValueInput(parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Unir Partida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport { UnirGame };","map":{"version":3,"sources":["/home/martin/Programas/React/tateti_v1.1/src/game/unirGame.tsx"],"names":["React","useState","useHistory","joinGame","UnirGame","codigo","setValueInput","Number","history","handleSubmit","event","preventDefault","game","push","id","error","console","log","parseInt","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,QAAT,QAAgC,WAAhC;;AAEA,SAASC,QAAT,GAAoB;AAEhB;AACA,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BL,QAAQ,CAACM,MAAD,CAAxC;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B,CAJgB,CAMhB;;AACA,iBAAeO,YAAf,CAA4BC,KAA5B,EAAoD;AAChDA,IAAAA,KAAK,CAACC,cAAN,GADgD,CACtB;;AAE1B,QAAG,CAACN,MAAJ,EAAY,OAHoC,CAG3B;;AAErB,QAAI;AACA,YAAMO,IAAW,GAAG,MAAMT,QAAQ,CAACE,MAAD,EAAS,EAAT,CAAlC,CADA,CACwD;;AAExDG,MAAAA,OAAO,CAACK,IAAR,CAAa,UAAUD,IAAI,CAACE,EAA5B,EAHA,CAG0C;AAC7C,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAGD,sBACI;AAAM,IAAA,QAAQ,EAAGL,KAAD,IAAWD,YAAY,CAACC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAGI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,aAAxB;AAAsC,IAAA,WAAW,EAAC,2BAAlD;AAA2E,IAAA,QAAQ,EAAGA,KAAD,IAAWJ,aAAa,CAACY,QAAQ,CAACR,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAT,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAYH;;AAED,SAAShB,QAAT","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { joinGame , IGame} from './gameApi';\n\nfunction UnirGame() {\n\n    // HOOKS\n    const [codigo, setValueInput] = useState(Number);\n    const history = useHistory();\n\n    // Al accionar boton Crear partida\n    async function handleSubmit(event: React.FormEvent) {\n        event.preventDefault();   // consume el evento\n\n        if(!codigo) return;  // Si el input esta vacio retorna nada       // DEBERIA VALIDAR QUE AL ESTAR VACIO MUESTRE UN MENSAJE \"El Codigo no puede estar vacio\"\n\n        try {\n            const game: IGame = await joinGame(codigo, {});         // Une el user2 a la partida.\n\n            history.push('game/' + game.id);          // Cambiar a pages game/:id/board\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    return (\n        <form onSubmit={(event) => handleSubmit(event)}>\n            <fieldset>\n\n                <label htmlFor=\"unirPartida\">Código Partida</label>\n                <input type=\"number\" id=\"unirPartida\" placeholder=\"Ingrese Código Partida\" onChange={(event) => setValueInput(parseInt(event.target.value))} />\n\n                <input type=\"submit\" value=\"Unir Partida\" />\n\n            </fieldset>\n        </form>\n    );\n}\n\nexport { UnirGame };"]},"metadata":{},"sourceType":"module"}